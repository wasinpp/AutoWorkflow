[versions]
ksp = "1.7.0-1.0.6" # https://github.com/google/ksp
rxJava = "2.2.21"
rxAndroid = "2.1.1"
coroutine = "1.6.3" # https://github.com/Kotlin/kotlinx.coroutines

# Compose
# https://developer.android.com/jetpack/androidx/releases/compose
# https://developer.android.com/jetpack/androidx/releases/compose-kotlin
compose = "1.2.0"
composeConstraintLayout = "1.0.0" # https://developer.android.com/jetpack/androidx/releases/constraintlayout
composeActivity = "1.5.0" # https://developer.android.com/jetpack/androidx/releases/activity
composePaging = "1.0.0-alpha15" # https://developer.android.com/jetpack/androidx/releases/paging
accompanist = "0.24.13-rc" # https://github.com/google/accompanist
composeNav = "2.5.0" # https://developer.android.com/jetpack/androidx/releases/navigation
composeCoil = "2.1.0" # https://coil-kt.github.io/coil/compose/
composeMaterial3 = "1.0.0-alpha14" # https://developer.android.com/jetpack/androidx/releases/compose-material3
composeUi = "1.3.0-alpha01" # https://developer.android.com/jetpack/androidx/releases/compose-ui
composeMaterial = "1.3.0-alpha01" # https://developer.android.com/jetpack/androidx/releases/compose-material
composeFoundation = "1.3.0-alpha01" # https://developer.android.com/jetpack/androidx/releases/compose-foundation
composeAnimation = "1.3.0-alpha01" # https://developer.android.com/jetpack/androidx/releases/compose-ui
composeViewModel = "2.6.0-alpha01" # https://developer.android.com/jetpack/androidx/releases/lifecycle

# Android Platform
appCompat = "1.4.2" # https://developer.android.com/jetpack/androidx/releases/appcompat
material = "1.6.0" # https://github.com/material-components/material-components-android/releases
paging = "3.1.1" # https://developer.android.com/jetpack/androidx/releases/paging
splashscreen = "1.0.0-rc01" # https://developer.android.com/jetpack/androidx/releases/core

# Test
junit5 = "5.7.0"
junitInstrumental = "1.1.3"
espresso = "3.4.0"
kotest = "5.1.0"
paparazzi = "1.0.0"

# Build
googleService = "4.3.8"
playPublisher = "3.6.0"

# Network
retrofit = "1.6.3"
okhttp = "4.9.1"
ktor = "1.6.7"
logback = "1.2.10"
kmongo = "4.5.0"

# Time (Multiplaform)
klock = "2.4.13"

# DI
dagger = "2.42" # https://github.com/google/dagger
koin = "3.1.5" # https://insert-koin.io/docs/setup/v3.1
koin-ksp = "1.0.0-beta-1" # https://insert-koin.io/docs/setup/ka_1.0

# Database
room = "2.4.2" # https://developer.android.com/jetpack/androidx/releases/room
sqldelight = "1.5.3" # https://cashapp.github.io/sqldelight/multiplatform_sqlite/

# Architecture
arrowkt = "1.1.2" # https://github.com/arrow-kt/arrow
kotlin-serialization = "1.3.2" # https://github.com/Kotlin/kotlinx.serialization

# Sync
startup = "1.1.1"
workManager = "2.7.1"

billing = "5.0.0"
appsflyer = "6.9.1"

[libraries]
# Coroutine
coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutine-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }
coroutine-rx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2", version.ref = "coroutine" }

# Compose
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeUi" }
## Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeFoundation" }
## Material Design
compose-material = { module = "androidx.compose.material:material", version.ref = "composeMaterial" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "composeMaterial" }
compose-material-icons-ext = { module = "androidx.compose.material:material-icons-extended", version.ref = "composeMaterial" }
compose-material-3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
## Navigation
compose-nav = { module = "androidx.navigation:navigation-compose", version.ref = "composeNav" }
## Tooling support (Previews, etc.)
compose-uiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeUi" }
## Animation
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "composeAnimation" }
compose-animationCore = { module = "androidx.compose.animation:animation-core", version.ref = "composeAnimation" }
## Components
compose-constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }
compose-swipeToRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
compose-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
compose-coil = { module = "io.coil-kt:coil-compose", version.ref = "composeCoil" }
## ViewModel
compose-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewModel" }

# Android Core
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
material = { module = "com.google.android.material:material", version.ref = "material" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

# Paging
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "composePaging" }
paging-room = { module = "androidx.room:room-paging", version.ref = "room" }

# Ksp
ksp-processing = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

# Network
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "retrofit" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Database
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
kmongo = { module = "org.litote.kmongo:kmongo-coroutine-serialization", version.ref = "kmongo" }

# Arrowkt
arrowkt-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrowkt" }
## Fx
arrowkt-fxCoroutine = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrowkt" }
arrowkt-fxStm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrowkt" }
## Optics
arrowkt-metaKapt = { module = "io.arrow-kt:arrow-meta", version.ref = "arrowkt" }
arrowkt-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrowkt" }

# Rx
rx-android = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxAndroid" }
rx-java = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJava" }

# Test
## AndroidTest
androidTest-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
androidTest-junit = { module = "androidx.test.ext:junit", version.ref = "junitInstrumental" }
androidTest-compose = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeUi" }
## Test
test-room = { module = "androidx.room:room-testing", version.ref = "room" }
test-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
test-composeRule = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeUi" } # Needed for createComposeRule, but not createAndroidComposeRule:
## Kotest
test-kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assert = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
## Koin
test-koin-feature = { module = "io.insert-koin:koin-test", version.ref = "koin" }
test-koin-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }

# kotlinx-serialization
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-log = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Time
klock-common = { module = "com.soywiz.korlibs.klock:klock", version.ref = "klock" }
klock-jvm = { module = "com.soywiz.korlibs.klock:klock-jvm", version.ref = "klock" }

# DI
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-ksp" }
ksp-koin = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-ksp" }

sqldelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqldelight" }
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }

# Sync
startup = { module = "androidx.startup:startup-runtime", version.ref = "startup" }
work-runtime = { module = "androidx.work:work-runtime", version.ref = "workManager" }
work-runtimektx = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
work-androidtest = { module = "androidx.work:work-testing", version.ref = "workManager" }
work-multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "workManager" }

billing = { module = "com.android.billingclient:billing-ktx", version.ref = "billing" }
appsflyer = { module = "com.appsflyer:af-android-sdk", version.ref = "appsflyer" }

[bundles]
compose = [
    "compose-activity",
    "compose-ui",
    "compose-uiTooling",
    "compose-foundation",
    "compose-material",
    "compose-material-icons-core",
    "compose-material-icons-ext",
    "compose-material-3",
    "compose-nav",
    "compose-constraintLayout",
    "compose-swipeToRefresh",
    "compose-insets",
    "compose-coil",
    "compose-animation",
    "compose-viewModel"
]

coroutine = [
    "coroutine-core",
    "coroutine-android",
]

koin = [
    "koin-core",
    "koin-annotations"
]

arrowkt = [
    "arrowkt-core",
    "arrowkt-fxCoroutine",
    "arrowkt-fxStm"
]

[plugins]
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }